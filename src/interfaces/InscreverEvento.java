/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import classes.CadastroEventos;
import classes.InscritosEvento;
import classes.Usuario;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import meuPacote.ValidaCPF;

/**
 *
 * @author P2
 */
public class InscreverEvento extends javax.swing.JFrame {

    /**
     * Creates new form InscreverEventos
     */
    public InscreverEvento() {
        initComponents();

        btnExcluir.setEnabled(false);
        btnInscrever.setEnabled(false);

        DefaultTableModel dtm = (DefaultTableModel) tabelaEventos.getModel();
        for (int i = 0; i < CadastroEventos.eventos.size(); i++) {
            dtm.addRow(new Object[]{CadastroEventos.eventos.get(i).getCodigo(), CadastroEventos.eventos.get(i).getNome(),
                CadastroEventos.eventos.get(i).getData(),
                CadastroEventos.eventos.get(i).getHoraInicio(), CadastroEventos.eventos.get(i).getHoraFim()});
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaEventos = new javax.swing.JTable();
        btnInscrever = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        btnVerEventos = new javax.swing.JButton();
        txtCpf = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaExcluir = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Inscrever em Evento"));

        tabelaEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Data", "Hora de Início", "Hora de Término"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEventos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaEventosMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaEventos);

        btnInscrever.setText("Inscrever");
        btnInscrever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscreverActionPerformed(evt);
            }
        });

        jLabel1.setText("Seu CPF:");

        jLabel4.setText("Senha:");

        jLabel2.setText("Selecione o evento para se inscrever");

        btnVerEventos.setText("Ver eventos inscritos");
        btnVerEventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerEventosActionPerformed(evt);
            }
        });

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVerEventos)
                        .addGap(36, 36, 36)
                        .addComponent(btnInscrever))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel4))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSenha)
                                .addComponent(txtCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInscrever)
                    .addComponent(btnVerEventos))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Eventos inscritos"));

        tabelaExcluir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código do Evento", "Nome do Evento", "Aluno", "CPF", "Presença"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaExcluirMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaExcluir);

        btnExcluir.setText("Desinscrever");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel7.setText("Selecione o evento da qual não quer mais particpar para removê-lo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(115, 115, 115))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcluir)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnExcluir)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInscreverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscreverActionPerformed
        // TODO add your handling code here:

        String CPF = txtCpf.getText();
        String senha = String.valueOf(txtSenha.getPassword());
        if (CPF.equals("") || senha.equals("")) {
            JOptionPane.showMessageDialog(null, "HÁ CAMPO EM BRANCO");
        } else {
            int i;
            boolean codigoValido = false;
            boolean jaCadastrado = false;
            int cliquei = tabelaEventos.getSelectedRow();
            int codigo = CadastroEventos.eventos.get(cliquei).getCodigo();

            if (ValidaCPF.isCPF(CPF) == false) {
                JOptionPane.showMessageDialog(null, "CPF INVÁLIDO");
            } else {
                int pos = -1;
                for (int j = 0; j < Usuario.usuarios.size(); j++) {
                    if (CPF.equals(Usuario.usuarios.get(j).getCpf())) {
                        pos = j;
                    }
                }
                if (pos == -1) {
                    JOptionPane.showMessageDialog(null, "CPF NÃO ENCONTRADO");
                } else {
                    if (senha.equals(Usuario.usuarios.get(pos).getSenha()) == false) {
                        JOptionPane.showMessageDialog(null, "SENHA INVÁLIDA");
                    } else {

                        InscritosEvento inscrit = new InscritosEvento();
                        int y = InscritosEvento.inscritos.size();

                        int linhaSel = tabelaEventos.getSelectedRow();
                        if (y == 0) {
                            String nomeEvento = CadastroEventos.eventos.get(linhaSel).getNome();
                            int codEvento = CadastroEventos.eventos.get(linhaSel).getCodigo();
                            String nomeAluno = Usuario.usuarios.get(pos).getNome();
                            int codAluno = Usuario.usuarios.get(pos).getCod();
                            inscrit.cadastrar(nomeAluno, CPF, nomeEvento, codEvento, 1);
                            InscritosEvento.inscritos.add(inscrit);
                            JOptionPane.showMessageDialog(null, "INSCRITO NO EVENTO");

                        } else {
                            for (int j = 0; j < InscritosEvento.inscritos.size(); j++) {
                                if (codigo == InscritosEvento.inscritos.get(j).getCodEvento() && CPF.equals(
                                        InscritosEvento.inscritos.get(j).getCpf())) {
                                    jaCadastrado = true;
                                }
                            }
                            if (jaCadastrado == true) {
                                JOptionPane.showMessageDialog(null, "JÁ ESTÁ INSCRITO NO EVENTO");
                            } else {
                                int k = InscritosEvento.inscritos.get(y - 1).getCodInscritos() + 1;
                                String nomeEvento = CadastroEventos.eventos.get(linhaSel).getNome();
                                int codEvento = CadastroEventos.eventos.get(linhaSel).getCodigo();
                                String nomeAluno = Usuario.usuarios.get(pos).getNome();
                                int codAluno = Usuario.usuarios.get(pos).getCod();
                                inscrit.cadastrar(nomeAluno, CPF, nomeEvento, codEvento, k);
                                InscritosEvento.inscritos.add(inscrit);
                                JOptionPane.showMessageDialog(null, "INSCRITO NO EVENTO");

                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnInscreverActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        int linhaSel = tabelaExcluir.getSelectedRow();
        String cpf = tabelaExcluir.getValueAt(linhaSel, 3).toString();
        int pos = -1;
        int codigoEvento = (int) tabelaExcluir.getValueAt(linhaSel, 0);
        for (int i = 0; i < InscritosEvento.inscritos.size(); i++) {
            if (InscritosEvento.inscritos.get(i).getCodEvento() == codigoEvento && InscritosEvento.inscritos.get(i).getCpf().equals(cpf)) {
                pos = i;
            }
        }
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "CPF NÃO ENCONTRADO");
        } else {
            int excluir = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja desinscrever desse evento?", "Alerta", JOptionPane.YES_NO_OPTION);

            if (excluir == JOptionPane.YES_OPTION) {

                DefaultTableModel dtm = (DefaultTableModel) tabelaExcluir.getModel();
                dtm.removeRow(linhaSel);
                InscritosEvento.inscritos.remove(pos);

            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tabelaEventosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaEventosMouseReleased
        // TODO add your handling code here:
        if (tabelaEventos.getSelectedRow() != -1) {
            btnInscrever.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaEventosMouseReleased

    private void tabelaExcluirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaExcluirMouseReleased
        // TODO add your handling code here:
        if (tabelaExcluir.getSelectedRow() != -1) {
            btnExcluir.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaExcluirMouseReleased

    private void btnVerEventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerEventosActionPerformed
        // TODO add your handling code here:

        if (txtCpf.getText().equals("") || txtSenha.getPassword().equals("")) {
            JOptionPane.showMessageDialog(null, "EXISTE CAMPO EM BRANCO");
        } else {

            String CPF = txtCpf.getText();
            String senha = String.valueOf(txtSenha.getPassword());
            if (ValidaCPF.isCPF(CPF) == false) {
                JOptionPane.showMessageDialog(null, "CPF INVÁLIDO");
            } else {
                int pos = -1;
                for (int j = 0; j < Usuario.usuarios.size(); j++) {
                    if (CPF.equals(Usuario.usuarios.get(j).getCpf())) {
                        pos = j;
                    }
                }
                if (pos == -1) {
                    JOptionPane.showMessageDialog(null, "CPF NÃO ENCONTRADO");
                } else {
                    if (senha.equals(Usuario.usuarios.get(pos).getSenha()) == false) {
                        JOptionPane.showMessageDialog(null, "SENHA INVÁLIDA");
                    } else {
                        int cont = 0;
                        for (int i = 0; i < InscritosEvento.inscritos.size(); i++) {
                            if (CPF.equals(InscritosEvento.inscritos.get(i).getCpf())) {
                                cont++;
                            }
                        }
                        if (cont == 0) {
                            JOptionPane.showMessageDialog(null, "VOCÊ NÃO ESTÁ INSCRITO EM NENHUM EVENTO");
                        } else {
                            DefaultTableModel tblRemove = (DefaultTableModel) tabelaExcluir.getModel();
                            tblRemove.setNumRows(0);
                            DefaultTableModel dtm = (DefaultTableModel) tabelaExcluir.getModel();
                            for (int j = 0; j < InscritosEvento.inscritos.size(); j++) {
                                if (CPF.equals(InscritosEvento.inscritos.get(j).getCpf())) {
                                    dtm.addRow(new Object[]{InscritosEvento.inscritos.get(j).getCodEvento(),
                                        InscritosEvento.inscritos.get(j).getNomeEvento(),
                                        InscritosEvento.inscritos.get(j).getNome(), InscritosEvento.inscritos.get(j).getCpf(),
                                        InscritosEvento.inscritos.get(j).isPresente()});
                                }
                            }
                        }

                    }
                }
            }
        }
    }//GEN-LAST:event_btnVerEventosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InscreverEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InscreverEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InscreverEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InscreverEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InscreverEvento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnInscrever;
    private javax.swing.JButton btnVerEventos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabelaEventos;
    private javax.swing.JTable tabelaExcluir;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables
}
