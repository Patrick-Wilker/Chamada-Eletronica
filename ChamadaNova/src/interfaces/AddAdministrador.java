/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import classes.InscritosEvento;
import classes.Usuario;
import javax.swing.JOptionPane;
import meuPacote.ValidaCPF;

/**
 *
 * @author P2
 */
public class AddAdministrador extends javax.swing.JFrame {

    /**
     * Creates new form AddAminsitrador
     */
    public AddAdministrador() {
        initComponents();

        txtCpf.setEnabled(false);
        btnNovo.setEnabled(true);
        btnSalvar.setEnabled(false);
        txtCpfRetirar.setEnabled(false);
        btnNovoRetirar.setEnabled(true);
        btnSalvarRetirar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        btnSalvar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCpfRetirar = new javax.swing.JFormattedTextField();
        btnSalvarRetirar = new javax.swing.JButton();
        btnNovoRetirar = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Adicionar Administrador"));

        jLabel1.setText("Informe o CPF para atribuir a função de administrador:");

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovo)
                        .addGap(39, 39, 39)
                        .addComponent(btnSalvar))
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnNovo))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Remover Administrador"));

        jLabel2.setText("Informe o CPF para retirar função de administrador:");

        try {
            txtCpfRetirar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnSalvarRetirar.setText("Salvar");
        btnSalvarRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarRetirarActionPerformed(evt);
            }
        });

        btnNovoRetirar.setText("Novo");
        btnNovoRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoRetirarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(btnNovoRetirar)
                        .addGap(39, 39, 39)
                        .addComponent(btnSalvarRetirar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCpfRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtCpfRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarRetirar)
                    .addComponent(btnNovoRetirar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        String CPF = txtCpf.getText();
        if (CPF.equals("")) {
            JOptionPane.showMessageDialog(null, "EXISTE CAMPO EM BRANCO");
        } else {
            int pos = -1;
            boolean cpfCadastrado = false;
            if (ValidaCPF.isCPF(CPF) == false) {
                JOptionPane.showMessageDialog(null, "CPF INVÁLIDO");
            } else {
                for (int i = 0; i < Usuario.usuarios.size(); i++) {
                    if (CPF.equals(Usuario.usuarios.get(i).getCpf())) {
                        cpfCadastrado = true;
                        pos = i;
                    }
                }
                if (cpfCadastrado == false) {
                    JOptionPane.showMessageDialog(null, "CPF NÃO CADASTRADO");
                } else {
                    if (Usuario.usuarios.get(pos).isPermissao() == true) {
                        JOptionPane.showMessageDialog(null, "JÁ POSSUI PERMISSÃO DE ADMINISTRADOR");
                    } else {
                        Usuario.usuarios.get(pos).setPermissao(true);
                        txtCpf.setEnabled(false);
                        btnNovo.setEnabled(true);
                        btnSalvar.setEnabled(false);
                        txtCpf.setText("");
                        JOptionPane.showMessageDialog(null, "FUNÇÃO DE ADMINISTRADOR ATRIBUIDA COM SUCESSO");
                    }

                }
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        txtCpf.setEnabled(true);
        btnNovo.setEnabled(false);
        btnSalvar.setEnabled(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarRetirarActionPerformed
        // TODO add your handling code here:
        String CPF = txtCpfRetirar.getText();
        if (CPF.equals("")) {
            JOptionPane.showMessageDialog(null, "EXISTE CAMPO EM BRANCO");
        } else {
            int pos = -1;
            boolean cpfCadastrado = false;
            if (ValidaCPF.isCPF(CPF) == false) {
                JOptionPane.showMessageDialog(null, "CPF INVÁLIDO");
            } else {
                for (int i = 0; i < Usuario.usuarios.size(); i++) {
                    if (CPF.equals(Usuario.usuarios.get(i).getCpf())) {
                        cpfCadastrado = true;
                        pos = i;
                    }
                }
                if (cpfCadastrado == false) {
                    JOptionPane.showMessageDialog(null, "CPF NÃO CADASTRADO");
                } else {
                    int cont = 0;
                    for (int i = 0; i < Usuario.usuarios.size(); i++) {
                        if (Usuario.usuarios.get(i).isPermissao() == true) {
                            cont++;
                        }
                    }
                    if (cont == 1) {
                        JOptionPane.showMessageDialog(null, "ÚNICO ADMINISTRADOR DO SISTEMA");
                    } else {
                        Usuario.usuarios.get(pos).setPermissao(false);
                        txtCpfRetirar.setEnabled(false);
                        btnNovoRetirar.setEnabled(true);
                        btnSalvarRetirar.setEnabled(false);
                        txtCpfRetirar.setText("");
                        JOptionPane.showMessageDialog(null, "FUNÇÃO DE ADMINISTRADOR RETIRADA COM SUCESSO");
                    }

                }
            }
        }
    }//GEN-LAST:event_btnSalvarRetirarActionPerformed

    private void btnNovoRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoRetirarActionPerformed
        // TODO add your handling code here:
        txtCpfRetirar.setEnabled(true);
        btnNovoRetirar.setEnabled(false);
        btnSalvarRetirar.setEnabled(true);
    }//GEN-LAST:event_btnNovoRetirarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAdministrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnNovoRetirar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvarRetirar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtCpfRetirar;
    // End of variables declaration//GEN-END:variables
}
